import telebot
import config
import random
 
from telebot import types
 
bot = telebot.TeleBot(config.TOKEN)
 
@bot.message_handler(commands=['start'])
def welcome(message):

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
    item3 = types.KeyboardButton("‚úä‚úåü§ö –ö–∞–º–∞–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")
 
    markup.add(item1, item2, item3)
 
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å —Ç–µ–±—è!".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
 
@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0,100)))
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':
 
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
 
            markup.add(item1, item2)
 
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        elif message.text == '‚úä‚úåü§ö –ö–∞–º–∞–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞':

            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton("‚úä –ö–∞–º–µ–Ω—å", callback_data='–ö')
            item2 = types.InlineKeyboardButton("‚úåÔ∏è –ù–æ–∂–Ω–∏—Ü—ã", callback_data='–ù')
            item3 = types.InlineKeyboardButton("ü§ö –ë—É–º–∞–≥–∞", callback_data='–ë')

            markup.add(item1, item2, item3)

            bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∞–π üòÅ', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')
 
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == '–ö':
                a = random.randint(1, 3)
                if a == 1:
                    bot.send_message(call.message.chat.id, '‚úä –ö–∞–º–µ–Ω—å')
                    bot.send_message(call.message.chat.id, '–ù–∏—á—å—è!')
                elif a == 2:
                    bot.send_message(call.message.chat.id, '‚úåÔ∏è –ù–æ–∂–Ω–∏—Ü—ã')
                    bot.send_message(call.message.chat.id, '–¢—ã –ø–æ–±–µ–¥–∏–ª!')
                elif a == 3:
                    bot.send_message(call.message.chat.id, 'ü§ö –ë—É–º–∞–≥–∞')
                    bot.send_message(call.message.chat.id, '–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!')
            elif call.data == '–ù':
                a = random.randint(1, 3)
                if a == 1:
                    bot.send_message(call.message.chat.id, '‚úä –ö–∞–º–µ–Ω—å')
                    bot.send_message(call.message.chat.id, '–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!')
                elif a == 2:
                    bot.send_message(call.message.chat.id, '‚úåÔ∏è –ù–æ–∂–Ω–∏—Ü—ã')
                    bot.send_message(call.message.chat.id, '–ù–∏—á—å—è!')
                elif a == 3:
                    bot.send_message(call.message.chat.id, 'ü§ö –ë—É–º–∞–≥–∞')
                    bot.send_message(call.message.chat.id, '–¢—ã –ø–æ–±–µ–¥–∏–ª!')
            elif call.data == '–ë':
                a = random.randint(1, 3)
                if a == 1:
                    bot.send_message(call.message.chat.id, '‚úä –ö–∞–º–µ–Ω—å')
                    bot.send_message(call.message.chat.id, '–¢—ã –ø–æ–±–µ–¥–∏–ª!')
                elif a == 2:
                    bot.send_message(call.message.chat.id, '‚úåÔ∏è –ù–æ–∂–Ω–∏—Ü—ã')
                    bot.send_message(call.message.chat.id, '–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!')
                elif a == 3:
                    bot.send_message(call.message.chat.id, 'ü§ö –ë—É–º–∞–≥–∞')
                    bot.send_message(call.message.chat.id, '–ù–∏—á—å—è!')
            elif call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')


 
    except Exception as e:
        print(repr(e))
 
# RUN
bot.polling(none_stop=True)
